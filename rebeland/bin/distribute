#!/bin/bash

# Usage:  distribute _num_jobs_ _command_

jobs=$1
command=${@:2}

cp $REBELANDECJ_BIN/map.out /tmp/atalukde.map.out

nodes=( 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 )

# mincpus=3
mincpus=2

for i in "${nodes[@]}"
do
	ret=`grep -w "node$i" /tmp/atalukde.map.out`
	if [ "$ret" != "node$i" ]; then
		free=`ssh node$i freecpus`
		echo "+++++ node$i has $free CPUs"
		while [ $free -ge $mincpus ]
		do
			echo "ssh node$i nice $command"
			ssh node$i nice $command >& /dev/null &
			free=$(( $free - 1 ))
			jobs=$(( $jobs - 1 ))
			if [ $jobs -le 0 ]; then
				echo "All distributed"
				exit
			fi
		done
	fi
done

# if we got here we failed
echo FAILED -- not enough CPUs
echo We had $jobs jobs left
echo distributing the rest to formerly unloaded machines

for i in "${nodes[@]}"
do
	ret=`grep -w "node$i" /tmp/atalukde.map.out`
	if [ "$ret" != "node$i" ]; then
		free=`ssh node$i freecpus`
		echo "+++++ node$i has $free CPUs"
		while [ $free -ge $mincpus ]
		do
			echo "ssh node$i nice $command"
			ssh node$i nice $command >& /dev/null &
			jobs=$(( $jobs - 1 ))
			if [ $jobs -le 0 ]; then
				echo "All distributed"
				exit
			fi
		done
	fi
done

# if we got here we failed
echo FAILED -- not enough CPUs
echo We had $jobs jobs left
echo distributing the rest arbitrarily

while [ $jobs -gt 0 ]; then
do
	for i in "${node[@]}"
	do
		ret=`grep -w "node$i" /tmp/atalukde.map.out`
		if [ "$ret" != "node$i" ]; then
			echo "ssh node$i nice $command"
			ssh node$i nice $command >& /dev/null &
			jobs=$(( $jobs - 1 ))
			if [ $jobs -le 0 ]; then
				echo "All distributed"
				exit
			fi	
		fi	
	done
done
